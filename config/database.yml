# PostgreSQL. Versions 9.1 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/opt/homebrew/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: member_develop_logs_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: member_develop_logs_test

# Store production database in the storage/directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary:
    <<: *default
    database: member_develop_logs_production
    username: member_develop_logs
    password: <%= ENV["MEMBER_DEVELOP_LOGS_DATABASE_PASSWORD"] %>
  cache:
    <<: *default
    database: member_develop_logs_cache
    username: member_develop_logs
    password: <%= ENV["MEMBER_DEVELOP_LOGS_DATABASE_PASSWORD"] %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: member_develop_logs_queue
    username: member_develop_logs
    password: <%= ENV["MEMBER_DEVELOP_LOGS_DATABASE_PASSWORD"] %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: member_develop_logs_cable
    username: member_develop_logs
    password: <%= ENV["MEMBER_DEVELOP_LOGS_DATABASE_PASSWORD"] %>
    migrations_paths: db/cable_migrate
