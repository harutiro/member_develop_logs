<div class="container">
  <h1 class="text-2xl font-bold mb-6">作業ログの編集</h1>
  
  <%= form_with(model: @work_log, class: "card") do |f| %>
    <% if @work_log.errors.any? %>
      <div class="alert alert-error">
        <h2 class="text-sm font-medium"><%= pluralize(@work_log.errors.count, "error") %> prohibited this work log from being saved:</h2>
        <ul class="mt-2 list-disc list-inside">
          <% @work_log.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    
    <div class="form-group">
      <%= f.label :member_id, "メンバー" %>
      <%= f.collection_select :member_id, @members, :id, :name, 
          { prompt: "メンバーを選択してください" },
          class: "form-control" %>
    </div>
    
    <div class="grid grid-cols-2 gap-4">
      <div class="form-group">
        <%= f.label :start_time, "開始時間" %>
        <div class="flex">
          <%= f.datetime_local_field :start_time, class: "form-control" %>
          <button type="button" onclick="setCurrentTime('work_log_start_time')" 
              class="btn">
            現在時刻
          </button>
        </div>
      </div>
      
      <div class="form-group">
        <%= f.label :end_time, "終了時間" %>
        <div class="flex">
          <%= f.datetime_local_field :end_time, class: "form-control" %>
          <button type="button" onclick="setCurrentTime('work_log_end_time')" 
              class="btn">
            現在時刻
          </button>
        </div>
      </div>
    </div>
    
    <div class="card">
      <h3 class="text-lg font-medium mb-2">作業時間の計算</h3>
      <div class="grid grid-cols-2 gap-4">
        <div class="form-group">
          <label>開始時間</label>
          <input type="text" id="calc_start_time" class="form-control" readonly>
        </div>
        <div class="form-group">
          <label>終了時間</label>
          <input type="text" id="calc_end_time" class="form-control" readonly>
        </div>
        <div class="form-group col-span-2">
          <label>作業時間</label>
          <input type="text" id="calc_duration" class="form-control" readonly>
        </div>
      </div>
    </div>
    
    <div class="flex gap-4 mt-4">
      <%= f.submit "更新", class: "btn" %>
      <%= link_to "キャンセル", work_logs_path(member_id: @work_log.member_id), class: "btn" %>
    </div>
  <% end %>
</div>

<script>
function setCurrentTime(fieldId) {
  const now = new Date();
  const year = now.getFullYear();
  const month = String(now.getMonth() + 1).padStart(2, '0');
  const day = String(now.getDate()).padStart(2, '0');
  const hours = String(now.getHours()).padStart(2, '0');
  const minutes = String(now.getMinutes()).padStart(2, '0');
  
  const dateTimeString = `${year}-${month}-${day}T${hours}:${minutes}`;
  document.getElementById(fieldId).value = dateTimeString;
  
  calculateDuration();
}

function calculateDuration() {
  const startTime = document.getElementById('work_log_start_time').value;
  const endTime = document.getElementById('work_log_end_time').value;
  
  if (startTime && endTime) {
    const start = new Date(startTime);
    const end = new Date(endTime);
    
    if (end >= start) {
      const duration = (end - start) / (1000 * 60 * 60); // 時間単位に変換
      document.getElementById('calc_duration').value = `${duration.toFixed(2)}時間`;
    } else {
      document.getElementById('calc_duration').value = '終了時間は開始時間より後の時間を指定してください';
    }
  }
}

// 開始時間と終了時間の入力フィールドにイベントリスナーを追加
document.getElementById('work_log_start_time').addEventListener('change', calculateDuration);
document.getElementById('work_log_end_time').addEventListener('change', calculateDuration);

// 計算用の表示フィールドを更新する関数
function updateCalcFields() {
  const startTime = document.getElementById('work_log_start_time').value;
  const endTime = document.getElementById('work_log_end_time').value;
  
  document.getElementById('calc_start_time').value = startTime ? new Date(startTime).toLocaleString('ja-JP') : '';
  document.getElementById('calc_end_time').value = endTime ? new Date(endTime).toLocaleString('ja-JP') : '';
}

// 入力フィールドの変更時に計算用フィールドを更新
document.getElementById('work_log_start_time').addEventListener('change', updateCalcFields);
document.getElementById('work_log_end_time').addEventListener('change', updateCalcFields);

// 初期表示時に計算用フィールドを更新
updateCalcFields();
</script> 